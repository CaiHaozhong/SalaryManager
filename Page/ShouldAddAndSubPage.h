// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef ShouldAddAndSubPage_h
#define ShouldAddAndSubPage_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Spinner.H>
#include <FL/FL_Box.H>
#include "Storage.h"
#define QUERY_PERSON 1
#define CONFIRM 2
#define CANCEL 3
class ShouldAddAndSubPage {
public:
	ShouldAddAndSubPage();  
	static Fl_Input *personNumIP;

	static Fl_Box *_personNameBox;
	static Fl_Box *_departNameBox;
	static Fl_Box *_jobNameBox;
	static Fl_Box *_personGenderBox;

	static Fl_Input *addsubIP;
	static Fl_Spinner *moneySP;
	static Fl_Spinner *yearSP;
	static Fl_Spinner *monthSP;
	static Fl_Spinner *daySP;

	static Fl_Double_Window* container;

	static EmployeeData _employeeData;

	static Fl_Button* confirmBt;
public:
	void show()
	{
		container->show();
	}
	static void queryEmployeeData(string personNum)
	{
		std::vector<EmployeeData> ev = Storage::getInstance()->queryPersonByNum(personNum);
		if(ev.size() > 0)
			_employeeData = ev.at(0);
		else
			_employeeData = EmployeeData();
	}
	static void setUpWidget()
	{
		_personNameBox->label(_employeeData.personName.c_str());
		_personGenderBox->label(_employeeData.gender.c_str());
		_departNameBox->label(_employeeData.departName.c_str());
		_jobNameBox->label(_employeeData.jobName.c_str());
		if(_employeeData.personName == "")
			return;
		confirmBt->activate();
	}
	static string numToString(double num)
	{
		char str[20];
		sprintf(str,"%.0lf",num);
		return string(str);
	}
	static void addAlterationToDataBase()
	{
		string alterationDay = numToString(yearSP->value()) + "-" + numToString(monthSP->value()) + "-" + numToString(daySP->value());
		AlterationData aData(personNumIP->value(),addsubIP->value(),moneySP->value(),alterationDay);
		Storage::getInstance()->addAlteration(aData);
	}
	static void buttonCallBack(Fl_Widget* sender, void* userdata)
	{
		int btType = (int)userdata;
		switch (btType)
		{
		case QUERY_PERSON:
			queryEmployeeData(personNumIP->value());
			setUpWidget();
			break;
		case CONFIRM:			
			addAlterationToDataBase();
			break;
		case CANCEL:
			container->hide();
			break;
		default:
			break;
		}
	}
};
#endif
